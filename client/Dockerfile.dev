# Reference: 
# Multistage Build: https://docs.docker.com/develop/develop-images/multistage-build/
# Dockerfile Reference: https://docs.docker.com/engine/reference/builder/
# Next.js with Docker: https://nextjs.org/docs/deployment#docker-image
# Output Tracing: https://nextjs.org/docs/advanced-features/output-file-tracing

# NOTE: To run this file in docker-compose.yml;
# - update "dockerfile: Dockerfile" to "dockerfile: Dockerfile.dev"
# - comment out "command: yarn dev -p ${CLIENT_PORT}" 
# The final Image size is 121MB

# Dependency Installation:
FROM node:16.17-alpine as deps
# Temp directory
WORKDIR /app
COPY package.json yarn.lock ./
RUN yarn install  --frozen-lockfile

# Build:
FROM node:16.17-alpine as builder
# Temp directory
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY src ./src
COPY public ./public
COPY package.json yarn.lock next.config.js jsconfig.json ./
COPY . . 
RUN yarn build

# Production:
FROM node:16.17-alpine as runner
ENV NODE_ENV=production
# For security, create a new user and group:
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001
COPY --from=builder /app/public ./public
# Output tracing to reduce image size:
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
USER nextjs
# Set default port to 7000:
EXPOSE 7000
ENV PORT 7000

CMD ["node", "server.js"]
